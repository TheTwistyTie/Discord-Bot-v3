const { SlashCommandBuilder, PermissionFlagsBits, roleMention } = require('discord.js');
const {Regions} = require('../enums');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('addregion')
        .setDescription('Add a region.')
        .addStringOption(option =>
            option
                .setName('region')
                .setDescription('The region you are adding.')
                .setRequired(true))
        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),
    async execute(interaction) {
        const region = interaction.options.getString('region');
        console.log(region);
        try {
            const client = interaction.client;
            const Region = await client.database.get(Regions).findOne({
                where: {guildID: interaction.guild.id, name: region}
            })

            if(Region) {
                const roles = await interaction.guild.roles.fetch()

                const regionRole = roles.find(role => role.name === region)

                if(!regionRole) {
                    const newRole = await interaction.guild.roles.create({
                        name: region,
                        reason: 'Adding new Region.'
                    });

                    return await interaction.reply(`Refreshed ${region}, <@&${newRole.id}>`);
                }

                return await interaction.reply(`${region} already exists.`)
            }

            const newRole = await interaction.guild.roles.create({
                name: region,
                reason: 'Adding new Region.'
            })

            client.database.get(Regions).create({
                guildID: interaction.guild.id,
                name: region,
                roleID: newRole.id
            })

            return await interaction.reply(`Added ${region}, <@&${newRole.id}>`);
        } catch (e) {
            console.log(e);
        }
    }
} 